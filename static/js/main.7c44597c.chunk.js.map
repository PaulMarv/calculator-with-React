{"version":3,"sources":["Component/Button/Button.js","utils/commaClass.js","Component/Display/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Button","content","equiv","type","onButtonClick","className","onClick","xmlns","width","height","fill","class","viewBox","d","commaClass","value","output","decimal","isNeg","includes","substring","indexOf","parseFloat","length","toFixed","toString","toLocaleString","Display","total","sight","App","useState","setValue","history","setHistory","operator","setOperator","setTotal","setSight","handleButtonPress","num","operatorCheck","substr","Big","plus","minus","times","div","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c44597c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nexport const Button = ({content,equiv, type, onButtonClick}) => {\r\n    return (\r\n        <div className ={`Button ${content==='='? 'equals': \"\"} ${type || ''}`}\r\n        onClick ={onButtonClick(content, equiv)}>\r\n            {content!==\"#\" ?content: \r\n            <div><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-backspace\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z\"/>\r\n                <path d=\"M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z\"/>\r\n                </svg>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","\r\nconst commaClass = (value) => {\r\n  if(value === \"0\")return 0;\r\n  let output = \"\";\r\n  let decimal = \"\";\r\n  let isNeg = false;\r\n  if(value.includes(\".\")){\r\n      output = value.substring(0, value.indexOf(\".\"));\r\n      decimal = value.substring(value.indexOf(\".\"));\r\n  }else{\r\n      output = value;\r\n  }\r\n  if(parseFloat(value)<0){\r\n      isNeg = true;\r\n      output = output.substring(1)\r\n  }\r\n  if(value.length>10){\r\n      return value=(parseFloat(value).toFixed(8)).toString()\r\n  }\r\n  return isNeg\r\n  ? \"-\" + parseFloat(output).toLocaleString()+ decimal\r\n  : parseFloat(output).toLocaleString()+ decimal;\r\n};\r\n\r\nexport default commaClass\r\n","import React from 'react';\r\nimport commaClass from '../../utils/commaClass';\r\nimport './Display.css';\r\n\r\nexport const Display = ({value, total, sight}) => {\r\n    return (\r\n        <div className=\"view\">\r\n            <div className={`calculation ${sight.length > 8 ? 'length': ''}`}>{sight}</div>\r\n            <div className={`total ${value.length > 8 ? 'lengthy': ''}`}>\r\n                { total===true ?commaClass(value): \"\" }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState} from 'react'\r\nimport './App.css';\r\nimport { Button } from './Component/Button/Button';\r\nimport { Display } from './Component/Display/Display';\r\nimport Big from 'big.js';\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(\"0\");\r\n  const [history, setHistory] = useState(null);\r\n  const [operator, setOperator] = useState(null);\r\n  const [total, setTotal] = useState(true)\r\n  const [sight, setSight] = useState(\"\")\r\n  \r\n  const handleButtonPress = (content)=>()=>{\r\n     if(sight ===\"\"&&content==='%') return\r\n     if(sight ===\"\"&&content==='=') return\r\n     if (sight ===\"\"){\r\n          setSight(content)\r\n      }\r\n      else if (total===true){\r\n           setSight(value + content)\r\n      }  \r\n      else if ((sight[sight.length-1] ===\".\" ) && (content===\".\" )){\r\n          setSight(sight)\r\n      }\r\n      else if (operator && content===\".\"){\r\n          setSight(sight + '.')\r\n      }\r\n     else if(operator && content===\"+\"){\r\n          return\r\n     }\r\n     else if(operator && content===\"÷\"){\r\n          return\r\n      }\r\n      else if(operator && content===\"−\"){\r\n           return\r\n      }\r\n      else if(operator && content==='×'){\r\n        return\r\n       }   \r\n      else setSight(sight + content)\r\n\r\n    const num = parseFloat(value)\r\n    const operatorCheck = ()=>{\r\n      if(operator){\r\n        if(operator ==='+'){\r\n          setHistory((history + num))\r\n        }else if (operator === \"−\"){\r\n          setHistory((history - num))\r\n        }else if (operator === \"×\"){\r\n          setHistory((history * num))\r\n        }else if (operator === \"÷\"){\r\n          setHistory((history / num))\r\n        }\r\n      }else{\r\n        setHistory(num)\r\n        setTotal(false)\r\n      }\r\n    }\r\n    \r\n    switch (content) {\r\n      case \"#\":  \r\n          setTotal(false)\r\n          if(value.length!==1){\r\n            setSight(sight.substr(0,sight.length-1))\r\n            setValue(value.substr(0,value.length-1))\r\n          }\r\n          else if(value.length===1){\r\n            setValue(\"\")\r\n            setSight(sight.substr(0,sight.length-1))\r\n          }\r\n          else{\r\n            setValue(value.substr(0,value.length-1))\r\n            setSight(sight.substr(0,sight.length-1))\r\n          }\r\n\r\n          if(operator && value===\"\"){\r\n            setValue(history.toString())\r\n            setHistory(null)\r\n            setOperator(null)\r\n          }\r\n          else if(operator && value!==\"\") {\r\n            setValue(value.substr(0,value.length-1))\r\n          }\r\n          if(total===true){\r\n            setSight(value.substr(0,value.length-1))\r\n          }\r\n         \r\n        return \r\n      case \"C\":\r\n        setValue(\"0\")\r\n        setHistory(null)\r\n        setOperator(null)\r\n        setSight(\"\")\r\n        return \r\n      case \"%\":\r\n        setValue((num/100).toString())\r\n        setHistory(null)\r\n        setOperator(null)\r\n        setTotal(true)\r\n        setSight(value + \"%\")\r\n        return\r\n      case '+':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator('+')\r\n        \r\n        return\r\n      case '×':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator(\"×\")\r\n        return\r\n      case '÷':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator('÷')\r\n        return\r\n      case '−':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator('−')\r\n        return\r\n      case '.':\r\n        if(value.includes(\".\"))return;\r\n        setValue(value + \".\")\r\n        return\r\n      case '=':\r\n        if( sight ===\"\")return\r\n        if(!operator)return\r\n        if(operator ==='+'){\r\n          setValue((Big(history).plus(num)).toString())\r\n        }else if (operator === \"−\"){\r\n          setValue((Big(history).minus(num)).toString())\r\n        }else if (operator === \"×\"){\r\n          setValue((Big(history).times(num)).toString())\r\n        }else if (operator === \"÷\"){\r\n          setValue((Big(history).div(num)).toString())\r\n        }\r\n        setOperator(null)\r\n        setHistory(null)\r\n        setTotal(true)\r\n        setSight(sight)\r\n        return \r\n      default:\r\n        break;\r\n    }\r\n    if(value[value.length-1]=== \".\"){\r\n      setValue(value + content)\r\n    }else{\r\n      setValue(parseFloat(value + content).toString())\r\n    }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"box\">\r\n                <div className=\"container\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"part1\">\r\n                            <div className=\"header\">\r\n                                <span className=\"clock\">\r\n                                  <i className=\"fa fa-history\" ></i>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"display\">\r\n                                <div className=\"display-port\"> \r\n                                    <Display value={value} total={total} sight={sight}/>     \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"swipe\">\r\n                                <span className=\"swipper\" ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"keypad\">\r\n                                <div className=\"buttons\">\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"C\" type = \"function\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"#\" type = \"function\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"÷\" type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"×\" type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"7\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"8\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"9\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"−\" type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"4\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"5\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"6\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"+\" type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"1\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"2\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"3\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"=\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"%\" type = \"function\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"0\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\".\"/>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}