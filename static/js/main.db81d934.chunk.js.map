{"version":3,"sources":["component/Display/Display.js","component/Buttons/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Display","value","result","view","replace","className","length","Buttons","content","type","onButtonClick","operator","onClick","App","useState","setValue","history","setHistory","setOperator","setView","handleButtonPress","num","parseFloat","operatorCheck","toString","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db81d934.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Display.css\";\r\n\r\nexport const Display = ({value,view}) => {\r\n    const result = view.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    return (\r\n        <div className = {`display ${value.length > 7 ? 'length' : ''}` } >\r\n            {result}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./Button.css\"\r\n\r\nexport const Buttons = ({content, type, onButtonClick, operator}) => {\r\n    return (\r\n        <div className ={`Button ${content==='0'? 'zero': \"\"} ${type || ''}\r\n         ${content === operator ? 'highlighted':''}`} \r\n             onClick={onButtonClick(content)}\r\n             >\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport {Display} from './component/Display/Display';\nimport {Buttons} from \"./component/Buttons/Buttons\";\nimport { useState } from 'react';\n\nfunction App() {\n  const [value, setValue] = useState(\"0\");\n  const [history, setHistory] = useState(null);\n  const [operator, setOperator] = useState(null);\n  const [view, setView] = useState(\"0\")\n\n\n  \n  const handleButtonPress = (content)=>()=>{\n    const num = parseFloat(value)\n    const operatorCheck = ()=>{\n      if(operator){\n        if(operator ==='+'){\n          setHistory((history + num))\n        }else if (operator === \"−\"){\n          setHistory((history - num))\n        }else if (operator === \"×\"){\n          setHistory((history * num))\n        }else if (operator === \"÷\"){\n          setHistory((history / num))\n        }\n      }else{\n        setHistory(num)\n      }\n    }\n\n    switch (content) {\n      case \"AC\":\n        setValue(\"0\")\n        setHistory(null)\n        setOperator(null)\n        setView(\"0\")\n        return \n      case \"C\":\n        setValue(\"0\")\n        setHistory(null)\n        setOperator(null)\n        setView(\"0\")\n        return \n      case \"±\":\n        setValue((num* -1).toString())\n        setView((num* -1).toString())\n        return\n      case \"%\":\n        setValue((num/100).toString())\n        setHistory(null)\n        setOperator(null)\n        setView((num/100).toString())\n        return\n      case '+':\n        operatorCheck()\n        setValue(\"0\")\n        setOperator('+')\n        setView(value)\n        return\n      case '×':\n        operatorCheck()\n        setValue(\"0\")\n        setOperator(\"×\")\n        setView(value)\n        return\n      case '÷':\n        operatorCheck()\n        setValue(\"0\")\n        setOperator('÷')\n        setView(value)\n        return\n      case '−':\n        operatorCheck()\n        setValue(\"0\")\n        setOperator('−')\n        setView(value)\n        return\n      case '.':\n        if(value.includes(\".\"))return;\n        setValue(value + \".\")\n        setView(value + \".\")\n        return\n      case '=':\n        if(!operator)return\n        if(operator ==='+'){\n          setValue((history + num).toString())\n          setView((history + num).toString())\n        }else if (operator === \"−\"){\n          setValue((history - num).toString())\n          setView((history - num).toString())\n        }else if (operator === \"×\"){\n          setValue((history * num).toString())\n          setView((history * num).toString())\n        }else if (operator === \"÷\"){\n          setValue((history / num).toString())\n          setView((history / num).toString())\n        }\n        setOperator(null)\n        setHistory(null)\n        return \n      default:\n        break;\n    }\n    if(value[value.length-1]=== \".\"){\n      setValue(value + content)\n      setView(value + content)\n    }else{\n      setValue(parseFloat((num + content)).toString())\n      setView(parseFloat((num + content)).toString())\n    }\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <Display value={value} view={view} />\n        <div className=\"buttons\">\n          <Buttons onButtonClick = {handleButtonPress} content = {parseFloat(view)>0?'C':'AC'} type = \"function\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"±\" type = \"function\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"%\" type = \"function\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"÷\" type = \"operator\" operator={operator}/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"7\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"9\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"8\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"×\" type = \"operator\" operator={operator}/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"4\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"6\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"5\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"−\" type = \"operator\" operator={operator}/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"1\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"2\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"3\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"+\" type = \"operator\"  operator={operator}/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"0\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\".\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"=\"/>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}