{"version":3,"sources":["component/Display/Display.js","component/Buttons/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Display","value","num","replace","className","length","Buttons","content","type","onButtonClick","onClick","App","useState","setValue","history","setHistory","operator","setOperator","handleButtonPress","parseFloat","operatorCheck","toString","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.183fc93d.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Display.css\";\r\n\r\nexport const Display = ({value}) => {\r\n    const num = value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    return (\r\n        <div className = {`display ${value.length > 7 ? 'length' : ''}` } >\r\n            {num}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./Button.css\"\r\n\r\nexport const Buttons = ({content, type, onButtonClick}) => {\r\n    return (\r\n        <div className ={`Button ${content==='0'? 'zero': \"\"} ${type || ''}`} \r\n             onClick={onButtonClick(content)}\r\n             >\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport {Display} from './component/Display/Display';\nimport {Buttons} from \"./component/Buttons/Buttons\";\nimport { useState } from 'react';\n\nfunction App() {\n  const [value, setValue] = useState(\"0\");\n  const [history, setHistory] = useState(null);\n  const [operator, setOperator] = useState(null);\n\n  \n  const handleButtonPress = (content)=>()=>{\n    const num = parseFloat(value)\n    const operatorCheck = ()=>{\n      if(operator){\n        if(operator ==='+'){\n          setHistory((history + num))\n        }else if (operator === \"−\"){\n          setHistory((history - num))\n        }else if (operator === \"×\"){\n          setHistory((history * num))\n        }else if (operator === \"÷\"){\n          setHistory((history / num))\n        }\n      }else{\n        setHistory(num)\n      }\n    }\n\n    switch (content) {\n      case \"AC\":\n        setValue(\"0\")\n        setHistory(null)\n        setOperator(null)\n        return \n      case \"C\":\n        setValue(\"0\")\n        setHistory(null)\n        setOperator(null)\n        return \n      case \"±\":\n        setValue((num* -1).toString())\n        return\n      case \"%\":\n        setValue((num/100).toString())\n        setHistory(null)\n        setOperator(null)\n        return\n      case '+':\n       operatorCheck()\n       setValue(\"0\")\n       setOperator('+')\n        return\n      case '×':\n        operatorCheck()\n        setValue(\"0\")\n        setOperator(\"×\")\n        return\n      case '÷':\n        operatorCheck()\n        setValue(\"0\")\n        setOperator('÷')\n        return\n      case '−':\n        operatorCheck()\n        setValue(\"0\")\n        setOperator('−')\n        return\n      case '.':\n        if(value.includes(\".\"))return;\n        setValue(value + \".\")\n        return\n      case '=':\n        if(!operator)return\n        if(operator ==='+'){\n          setValue((history + num).toString())\n        }else if (operator === \"−\"){\n          setValue((history - num).toString())\n        }else if (operator === \"×\"){\n          setValue((history * num).toString())\n        }else if (operator === \"÷\"){\n          setValue((history / num).toString())\n        }\n        setHistory(null)\n        return\n      default:\n        break;\n    }\n    if(value[value.length-1]=== \".\"){\n      setValue(value + content)\n    }else{\n      setValue(parseFloat((num + content)).toString())\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <Display value={value} setValue={setValue}/>\n        <div className=\"buttons\">\n          <Buttons onButtonClick = {handleButtonPress} content = {parseFloat(value)>0?'C':'AC'} type = \"function\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"±\" type = \"function\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"%\" type = \"function\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"÷\" type = \"operator\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"7\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"9\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"8\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"×\" type = \"operator\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"4\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"6\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"5\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"−\" type = \"operator\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"1\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"2\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"3\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"+\" type = \"operator\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"0\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\".\"/>\n          <Buttons onButtonClick = {handleButtonPress} content =\"=\"/>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}