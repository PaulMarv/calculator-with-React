{"version":3,"sources":["Component/Button/Button.js","utils/commaClass.js","Component/Display/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Button","content","equiv","type","onButtonClick","className","onClick","commaClass","value","output","decimal","isNeg","includes","substring","indexOf","parseFloat","length","toFixed","toString","toLocaleString","Display","total","sight","view","calc","history","App","useState","setValue","setHistory","operator","setOperator","setView","setTotal","setSight","setCalc","setClear","useEffect","handleButtonPress","console","log","num","operatorCheck","substr","Big","plus","minus","times","div","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4030bd0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nexport const Button = ({content,equiv, type, onButtonClick}) => {\r\n    return (\r\n        <div className ={`Button ${content==='='? 'equals': \"\"} ${type || ''}`}\r\n        onClick ={onButtonClick(content, equiv)}>\r\n            {content!==\"#\" ?content: \r\n            <div><i className=\" fa fa-window-close\"></i></div>}\r\n        </div>\r\n    )\r\n}\r\n","\r\nconst commaClass = (value) => {\r\n  if(value === \"0\")return 0;\r\n  let output = \"\";\r\n  let decimal = \"\";\r\n  let isNeg = false;\r\n  if(value.includes(\".\")){\r\n      output = value.substring(0, value.indexOf(\".\"));\r\n      decimal = value.substring(value.indexOf(\".\"));\r\n  }else{\r\n      output = value;\r\n  }\r\n  if(parseFloat(value)<0){\r\n      isNeg = true;\r\n      output = output.substring(1)\r\n  }\r\n  if(value.length>10){\r\n      return value=(parseFloat(value).toFixed(8)).toString()\r\n  }\r\n  return isNeg\r\n  ? \"-\" + parseFloat(output).toLocaleString()+ decimal\r\n  : parseFloat(output).toLocaleString()+ decimal;\r\n};\r\n\r\nexport default commaClass\r\n","import React from 'react';\r\nimport commaClass from '../../utils/commaClass';\r\nimport './Display.css';\r\n\r\nexport const Display = ({value, total, view,sight, calc, history}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"view\">\r\n            <div className={`calculation ${sight.length > 8 ? 'length': ''}`}>{sight}</div>\r\n            <div className={`total ${value.length > 8 ? 'lengthy': ''}`}>\r\n                { total===true ?commaClass(value): \"\" }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './App.css';\r\nimport { Button } from './Component/Button/Button';\r\nimport { Display } from './Component/Display/Display';\r\nimport Big from 'big.js';\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(\"0\");\r\n  const [history, setHistory] = useState(null);\r\n  const [operator, setOperator] = useState(null);\r\n  const [view, setView] = useState(\"0\");\r\n  const [total, setTotal] = useState(true)\r\n  const [sight, setSight] = useState(\"\")\r\n  const [calc, setCalc] = useState(\"\")\r\n  const [clear, setClear]= useState(false)\r\n  \r\n\r\n  useEffect(() => {\r\n    setView(value)\r\n  }, [value])\r\n\r\n  const handleButtonPress = (content, equiv)=>()=>{\r\n     if(sight ===\"\"&&content==='%') return\r\n     if(sight ===\"\"&&content==='=') return\r\n     if (sight ===\"\"){\r\n          setSight(content)\r\n      }\r\n      else if (total===true){\r\n           setSight(value + content)\r\n      }  \r\n      else if ((sight[sight.length-1] ===\".\" ) && (content===\".\" )){\r\n          setSight(sight)\r\n      }\r\n      else if (operator && content===\".\"){\r\n          setSight(sight + '.')\r\n      }\r\n     else if(operator && content===\"+\"){\r\n          return\r\n     }\r\n     else if(operator && content===\"÷\"){\r\n          return\r\n      }\r\n      else if(operator && content===\"−\"){\r\n           return\r\n      }\r\n      else if(operator && content==='×'){\r\n        return\r\n       }\r\n      \r\n      else setSight(sight + content)\r\n\r\n\r\n    if(calc ===\"\"&&content==='%') return\r\n    if(calc ===\"\"&&content==='=') return\r\n    if ( calc===\"\"){\r\n        setCalc(equiv)\r\n    }\r\n    else if (total===true){\r\n        setCalc(value + equiv)\r\n    }\r\n    else if ((calc[calc.length-1] ===\".\" ) && (equiv===\".\" )){\r\n        setCalc(calc)\r\n    }\r\n    else if (operator && equiv===\".\"){\r\n        setCalc(calc + '.')\r\n    }\r\n    else if((operator && content===\"+\")){\r\n      return\r\n    }\r\n    else if(operator && content===\"÷\"){\r\n        return \r\n    }\r\n    else if(operator && content===\"−\"){\r\n        return\r\n    }\r\n    else if(operator && content==='×'){\r\n      return\r\n    }\r\n    else setCalc(calc + equiv)\r\n    \r\n     console.log(\"value:\"+value+ \"/calc:\" + calc + \"/sight:\" + sight + \"/view:\" +view)\r\n\r\n    const num = parseFloat(value)\r\n\r\n    const operatorCheck = ()=>{\r\n      if(operator){\r\n        if(operator ==='+'){\r\n          setHistory((history + num))\r\n        }else if (operator === \"−\"){\r\n          setHistory((history - num))\r\n        }else if (operator === \"×\"){\r\n          setHistory((history * num))\r\n        }else if (operator === \"÷\"){\r\n          setHistory((history / num))\r\n        }\r\n      }else{\r\n        setHistory(num)\r\n        setTotal(false)\r\n      }\r\n    }\r\n    \r\n    switch (content) {\r\n      case \"#\":  \r\n          setTotal(false)\r\n          setSight(sight.substr(0,sight.length-1))\r\n          setCalc(calc.substr(0,calc.length-1))\r\n          \r\n          setClear(true)\r\n          setValue(value.substr(0,value.length-1))\r\n          if((operator===null)&&(value.length===1 || value[value.length-1]===\"0\")){\r\n            setTotal(true)\r\n          }\r\n          else if(value.length===1 && operator!==null){\r\n            setOperator(null)\r\n            setValue(history.toString())\r\n            setHistory(null)\r\n          }\r\n          else if(total===true){\r\n            setSight(value.substr(0,value.length-1))\r\n          }\r\n          console.log(value.length)\r\n          // if(calc[calc.length-2]&&calc[calc.length-2] ==='+'){\r\n          //   setClear(false)\r\n          //   setOperator(true)\r\n          //   setHistory(parseFloat(calc.substring(0, calc.indexOf(\"+\"))))\r\n          //   setValue(calc.substring(calc.indexOf(\"+\")))\r\n          // }else{\r\n          //   setOperator(null)\r\n          //   setHistory(null)\r\n          //   setValue(calc.substr(0,calc.length-1))\r\n          //   setClear(true)\r\n          // }\r\n          \r\n          \r\n        return \r\n      case \"C\":\r\n        setValue(\"0\")\r\n        setHistory(null)\r\n        setOperator(null)\r\n        setSight(\"\")\r\n        setCalc(\"\")\r\n        return \r\n      case \"%\":\r\n        setValue((num/100).toString())\r\n        setHistory(null)\r\n        setOperator(null)\r\n        setTotal(true)\r\n        return\r\n      case '+':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator('+')\r\n        \r\n        return\r\n      case '×':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator(\"×\")\r\n        return\r\n      case '÷':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator('÷')\r\n        return\r\n      case '−':\r\n        operatorCheck()\r\n        setValue(\"\")\r\n        setOperator('−')\r\n        return\r\n      case '.':\r\n        if(value.includes(\".\"))return;\r\n        setValue(value + \".\")\r\n        return\r\n      case '=':\r\n        if( sight ===\"\")return\r\n        if(calc===\"\")return\r\n        if(!operator)return\r\n        if(operator ==='+'){\r\n          setValue((Big(history).plus(num)).toString())\r\n        }else if (operator === \"−\"){\r\n          setValue((Big(history).minus(num)).toString())\r\n        }else if (operator === \"×\"){\r\n          setValue((Big(history).times(num)).toString())\r\n        }else if (operator === \"÷\"){\r\n          setValue((Big(history).div(num)).toString())\r\n        }\r\n        setOperator(null)\r\n        setHistory(null)\r\n        setTotal(true)\r\n        setSight(sight)\r\n        setCalc(calc)\r\n        return \r\n      default:\r\n        break;\r\n    }\r\n    if(value[value.length-1]=== \".\"){\r\n      setValue(value + content)\r\n    }else{\r\n      setValue(parseFloat(value + content).toString())\r\n      // setView(Big(parseFloat(value + content)).toString())\r\n    }\r\n  \r\n    }\r\n    \r\n  \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"box\">\r\n                <div className=\"container\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"part1\">\r\n                            <div className=\"header\">\r\n                                <span className=\"clock\">\r\n                                  <i className=\"fa fa-history\" ></i>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"display\">\r\n                                <div className=\"display-port\"> \r\n                                    <Display value={value} view={view} total={total} sight={sight} calc={calc} history={history}/>     \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"swipe\">\r\n                                <span className=\"swipper\" ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"keypad\">\r\n                                <div className=\"buttons\">\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"C\" equiv=\"C\" type = \"function\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"#\" equiv=\"#\"  type = \"function\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"÷\" equiv=\"/\"  type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"×\" equiv=\"*\"  type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"7\" equiv=\"7\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"8\" equiv=\"8\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"9\" equiv=\"9\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"−\" equiv=\"-\"  type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"4\" equiv=\"4\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"5\" equiv=\"5\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"6\" equiv=\"6\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"+\" equiv=\"+\"  type = \"operator\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"1\" equiv=\"1\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"2\" equiv=\"2\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"3\" equiv=\"3\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"=\" equiv=\"=\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"%\" equiv=\"%\"  type = \"function\"/>\r\n                                    <Button onButtonClick ={handleButtonPress} content =\"0\" equiv=\"0\" />\r\n                                    <Button onButtonClick ={handleButtonPress} content =\".\" equiv=\".\" />\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}